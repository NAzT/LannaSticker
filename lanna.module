<?php

/**
 * Implementations of hook_perm().
 */

function lanna_perm() {
  return array('administer lanna');
}
/**
 * Implementaions of hook_init().
 */
 
function lanna_init() {

}
/**
 * Implementations of hook_menu().
 */
function lanna_menu() {
  $items['admin/settings/lanna'] = array(
    'title' =>  'Lanna',
    'description' => t('Check in application for Facebook'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lanna_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'lanna.admin.inc',
  );

  $items['lanna/register'] = array(
    'title' => t('Register'),
    'description' => t('Register facebook data.'),
    'page callback' => 'lanna_register',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'lanna.pages.inc',
  );

  $items['lanna/facebook/post/album'] = array(
    'title' => t('Post album'),
    'description' => t('Post album facebook data.'),
    'page callback' => 'lanna_facebook_post',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['lanna/save'] = array(
    'title' => t('Save'),
    'description' => t('Save checkin data'),
    'page callback' => 'lanna_save',
    'access callback' => 'lanna_user_access',
    'type' => MENU_CALLBACK,
  );

  $items['lanna'] = array(
    'title' => t('Lanna Sticker'),
    'description' => t('Lanna the pretty'),
    'page callback' => 'lanna_choose_photos',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'lanna.pages.inc',
  );

  $items['lanna/process'] = array(
    'title' => t('Lanna Processor'),
    'description' => t('Lanna Processor'),
    'page callback' => 'lanna_process',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Access callback for save data.
 * TODO
 */
function lanna_user_access() {
  return TRUE;
}

/**
 * Access callback for QR service.
 * TODO
 */

/**
 * Implementation of hook_cron().
 */
function lanna_cron() {

}


/**
 * Implementation of hook_load().
 */
function lanna_load($node) {

}

/**
 * Implementation of hook_insert().
 */
function lanna_insert($node) {

}

/**
 * Implementation of hook_update().
 */
function lanna_update($node) {

}

/**
 * Implementation of hook_delete().
 */
function lanna_delete($node) {

}

/**
 * Implementation of hook_view().
 */
function lanna_view($node, $teaser = FALSE, $page = FALSE) {

}

/**
 * Debug message.
function dm($msg) {
  drupal_set_message((is_object($msg) || is_array($msg)) ? '<pre>'. print_r($msg, 1) .'</pre>' : $msg);
}
*/

/**
 * Facebook register.
 * TODO
 */
function lanna_register() {
  $me = lanna_facebook_login();
  
  // Login success.
  if ($me) { 
    dm($me);
    
    // Is fbuid this registered?
    if (lanna_is_registered($me['id']) == FALSE) {
      // Register new user account.
      $account = array(
        'name' => $me['id'],
        'email' => $me['email'],
        'pass' => md5($me['id']),
      );
    }
    
    drupal_goto('lanna');
    return;
  }
  
  drupal_set_message(t('Login to facebook failed. Something wrong.'), 'error');
}

function lanna_is_registered($fbuid) {

}

/**
 * Get facebook object.
 */
function lanna_facebook() {
  require_once drupal_get_path('module', 'lanna') .'/lib/facebook.php';
   
  $appId = variable_get('lanna_app_api_key', '');
  $secret = variable_get('lanna_app_secret_key', '');
  
  $facebook = new Facebook(array(
    'appId'  => $appId,
    'secret' => $secret,
    'cookie' => true,
    'fileUpload' => true,
  ));
  
  return $facebook;
}

/**
 * Facebook login.
 */
function lanna_facebook_login($next='lanna') {
  $facebook = lanna_facebook();
  $session = $facebook->getSession();
  $me = null;
  // Session based API call.
  if ($session) {
    try {
      $me = $facebook->api('/me');
    } catch (FacebookApiException $e) {
      error_log($e);
    }
  } 

  // Authenticate permissions.
  if (!$me) {
    $perms = array(
      'user_photos',
      'publish_stream',
    );
    $absolute = TRUE; 
    $query = '';
    if($_REQUEST['theme']) {
      $query = 'theme='.$_REQUEST['theme'];
      $absolute = FALSE;
    }
    //drupal_set_message('next = '. $next); 
    $loginUrl = $facebook->getLoginUrl(array(
      'canvas' => 1,
      'fbconnect' => 0,
      'req_perms' => implode(',', $perms),
      //'next' => url($next, array('absolute' => $absolute, 'query' => $query)),
      'cancel_url' => url('<front>', array('absolute' => TRUE)),
    ));
    $js = 'top.location.href="'. $loginUrl .'"';
    drupal_add_js(array('lanna' =>  array('loginUrl' => $loginUrl)), 'setting');
    drupal_add_js($js, 'inline'); 
  }
  return $me;
}

/**
 * Get Facebook uid.
 */
function lanna_get_fbuid() {
  $me = lanna_facebook_login();
  return $me['id'];
}

function lanna_process() {
  $data = array_shift($_POST);
  $data = json_decode($data);
  $file_url = $data->source;
  $fbuid = $data->from->id;
  $fid = $data->id;
  $saved_path = save_image($file_url, $fbuid, $fid);
  $accum = array();
  $preset_list = array('lanna01_l', 'lanna02_l');
  foreach ($preset_list as $preset) {
    $link= imagecache_create_url($preset, $saved_path);
    $path = imagecache_create_path($preset, $saved_path);
    $accum[] = array('preset' => $preset, 'link' => $link, 'path' => $path, 'hash' => md5($preset.$path.'odcdn'));
  }
  $accum['name'] = array_flip($preset_list);
  drupal_json($accum);
}

function save_image($url, $subdir, $filename) {
  // TODO
  // Save small image and get image thumbnail path.
  $upload_path = 'sites/default/files/lanna/'.$subdir;
  file_check_directory($upload_path, FILE_CREATE_DIRECTORY);
  $image_data = drupal_http_request($url);
  $handler = file_save_data($image_data->data, $upload_path . '/'. $filename .'.jpg' , FILE_EXISTS_RENAME);
  return $upload_path .'/'. $filename.'.jpg';
}

function lanna_facebook_post() {
  $data = json_decode($_POST['data']);
  $facebook = lanna_facebook();
/*
	$args_album=array( // ค่าที่ส่งไปด้วย
		"name"=> 'Lanna', // ชื่อ album ที่ต้องการกำหนด
		"message"=> 'Lanna The Pretty', // คำอธิบายเกี่ยวกับ album
    );  
    try{
       $data= $facebook->api("/me/albums","post", $args_album);	// 	สร้าง album ใหม่
       drupal_set_message('<pre>'.print_r($data, 1).'</pre>');
    }catch (FacebookApiException $o) {
      drupal_set_message(var_export($o, 1));
      error_log($o);
    }	
*/
    $args = array(
          'message' => 'DESC MESSAGE', // คำอธิบายรูปภาพ
          'source'=> '@'. realpath('sites/default/files/lanna/896050346/10150313670425347.jpg'),
    ); 
    
    try {
 //     $data = $facebook->api("/Lanna/photos","post", $args);
  //    drupal_set_message('<pre>'.print_r($data, 1).'</pre>');
    }
    catch (FacebookApiException $o) {
      error_log($o);
      drupal_set_message(var_export($o, 1));
    }
  $post_hash = md5($data->preset.$data->path.'odcdn');
  if($post_hash == $data->hash) {
    drupal_json($data);
    $args = array(
          //'message' => 'DESC MESSAGE', // คำอธิบายรูปภาพ
          'source'=> '@'. realpath($data->path),
    ); 
    try {
      $data = $facebook->api("/me/photos","post", $args);
    }
    catch (FacebookApiException $o) {
      drupal_json($o); 
    }
  }
  else {
    print "{hello: 'hacker'}";
  }
  //return 'fb post';
}
